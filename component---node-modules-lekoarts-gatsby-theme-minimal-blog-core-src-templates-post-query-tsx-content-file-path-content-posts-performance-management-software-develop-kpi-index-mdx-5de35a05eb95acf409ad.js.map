{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-performance-management-software-develop-kpi-index-mdx-5de35a05eb95acf409ad.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/performance-management/software-develop-kpi/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    strong: \"strong\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h4: \"h4\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"\\\"경력기술서를 제출 안내드립니다.\\\"\"), \"\\n\", React.createElement(_components.p, null, \"토스 러너스하이 프로그램에서 이 메일을 받았을 때, 나는 또 익숙한 고민에 빠졌다. 개발 경력 동안 나는 무엇을 해왔고, 그것을 어떻게 표현해야 할까? 이전까지 작성했던 경력기술서들은 대부분 \\\"~ 시스템을 개발했다\\\", \\\" ~ 기능을 구현했다\\\" 정도의 단순한 서술에 그쳤던 것 같다. 그리고 이번에도 비슷한 고민이 반복되었다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 이번엔 익숙함 속에서 깨달은 바가 있었다. 내가 그동안 성과를 측정하고 관리하는 관점에서 일하지 않았다는 것. 그리고 이것이 단순히 경력기술서 작성의 문제를 넘어, 일하는 방식 전반에 걸친 근본적인 변화가 필요하다는 신호라는 것을.\"), \"\\n\", React.createElement(_components.h2, null, \"왜 개발자에게 KPI가 필요한가\"), \"\\n\", React.createElement(_components.p, null, \"SI/SM 회사에서 시작한 나의 첫 경력에서부터 지금까지, 대부분의 조직에서 성과는 '무엇을 출시했는가'로 평가되었다. 새로운 기능을 만들고, 새로운 시스템을 구축하는 것. 이것이 전부였다. 그러다 보니 개발을 하면서 마주치는 의사결정 과정에서도 출시에 방해가 되느냐? 도움이 되느냐?의 기준아래서 모든 것이 결정되었던 것 같다. 우리가 기한 내에 익숙하게 처리할 수 있는 방식이 심지어 유지보수에 어려움을 준다고 해도 서비스 출시라는 미명 아래 선택되었다.\"), \"\\n\", React.createElement(_components.p, null, \"요즘도 크게 다르지는 않지만, 이제는 개발을 하는 것 뿐만 아니라 팀의 워크플로우를 정하고 수정하는 위일까지 하게 되었다. 과거를 되풀이 하지 않기 위해, 코드 컨벤션을 강조하고, 코드 리뷰나 Merge Request 형식을 작성하게 하고, 스크럼을 하는 등 적지 않은 노력을 했다. 그러면서 점점 명확해 진 것이 있다. 정량 지표가 없이 정성적인 설명만 하면 모두가 다른 생각과 방향으로 나아간다는 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"정량적 지표가 중요한 이유는 바로 여기에 있다:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"의사결정의 객관적 근거를 제공한다.\"), \"\\n\", React.createElement(_components.li, null, \"팀원들과의 합의된 기준점이 된다\"), \"\\n\", React.createElement(_components.li, null, \"성과를 명확하게 측정하고 개선할 수 있다\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"예를 들면 '문서화가 잘 안되어 있어 기능 파악에 어려움이 있으니, 이런 문서를 만들어 봅시다.' 이런 제안은 거의 소리소문 없이 사라지기 일쑤였다. 이것이 문제 지점이 맞고 해결되어야 한다고 생각했으면 '우리가 말하는 문서화란 기능 당 무슨 무슨 문서가 있어야 하고, 이 기능의 수는 시스템 내 120개가 있으며, 현재 문서화 율은 12% 입니다. 다음 스프린트까지 문서화 우선 대상 기능은 무엇무엇이고 목표 문서화 율은 18% 입니다.' 이런 제안이 있을 때 훨씬 추적이 잘되고 팀 구성원들의 명시적, 암묵적인 합의가 더 잘 이루어졌다.\"), \"\\n\", React.createElement(_components.p, null, \"이 예시에서 '문서화 율'이라는 것이 하나의 정량 지표가 될 수 있겠다. 그리고 많은 조직에서 이런 성과관리 지표를 핵심성과지표 즉 KPI(Key Performance Indicator)라고 표현한다.\"), \"\\n\", React.createElement(_components.h2, null, \"KPI 설정과 측정 방법론\"), \"\\n\", React.createElement(_components.p, null, \"KPI를 어떻게 설정할까 고민하던 중, 경력기술서 작성에 대해 설명한 \", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/embed/FPvavDj-43Y?si=kATbJd7U4OFEBrzy\"\n  }, \"영상\"), \"을 보게 되었다. 이 영상에서 제시한 \\\"문제 해결 중심의 서술\\\" 방식에 착안해, 생성형 AI에게 개발자의 문제 해결 영역과 KPI를 연결해달라고 요청해보았다. 이하는 이 중에 몇 가지를 추린 결과다.\"), \"\\n\", React.createElement(_components.h3, null, \"생성형 AI 를 통한 KPI 만들기\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, React.createElement(_components.strong, null, \"문제 해결 영역\")), React.createElement(_components.th, null, React.createElement(_components.strong, null, \"KPI\")), React.createElement(_components.th, null, React.createElement(_components.strong, null, \"세부 목표 및 지표\")), React.createElement(_components.th, null, React.createElement(_components.strong, null, \"문제 해결 활동\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"서버 다운 및 과부하 이슈\")), React.createElement(_components.td, null, \"시스템 가용성 (Uptime)\"), React.createElement(_components.td, null, \"- 서버 가동률 99.9% 이상 유지 - 장애 발생 시 평균 복구 시간 (MTTR) 단축\"), React.createElement(_components.td, null, \"- 모니터링 도구(Prometheus/Grafana) 도입 및 실시간 알림 설정 - 이중화 및 백업 체계 구성 - 캐시 최적화 및 부하 분산 설정\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"느린 응답 시간, 비효율적 쿼리\")), React.createElement(_components.td, null, \"성능 (Performance)\"), React.createElement(_components.td, null, \"- 평균 응답 시간 1초 이하 - 트래픽 급증 시 95% 이상 트랜잭션 처리\"), React.createElement(_components.td, null, \"- 쿼리 최적화 및 인덱싱 개선 - Redis/Memcached 같은 캐시 도입 - 비동기 작업을 위한 메시지 큐 (Kafka, RabbitMQ) 사용\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"재고 정보 불일치\")), React.createElement(_components.td, null, \"데이터 정확성 및 무결성 (Data Integrity)\"), React.createElement(_components.td, null, \"- 실시간 재고 데이터 정확도 99% 유지 - 주문 상태 업데이트 오류율 1% 이하\"), React.createElement(_components.td, null, \"- 트랜잭션 관리 및 락 처리 강화 - 이벤트 소싱 방식으로 상태 추적 - 정기적인 데이터 검증 및 재고 동기화 자동화\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"SQL Injection, XSS 등 보안 취약점\")), React.createElement(_components.td, null, \"보안 (Security)\"), React.createElement(_components.td, null, \"- 보안 취약점 보고 및 대응 시간 단축 - 고객 데이터 유출 사고 0건\"), React.createElement(_components.td, null, \"- OWASP 가이드 기반 보안 검토 - JWT 또는 OAuth 기반의 인증/인가 관리 - SSL 및 데이터 암호화 적용\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"장바구니 페이지 로딩 지연\")), React.createElement(_components.td, null, \"고객 경험 (Customer Experience)\"), React.createElement(_components.td, null, \"- 주요 페이지의 로드 시간 2초 이하 - 결제/환불 오류에 대한 대응 시간 단축\"), React.createElement(_components.td, null, \"- 사용자 행동 데이터를 기반으로 UX 최적화 - 에러 발생 시 사용자에게 즉각적인 알림과 대체 플로우 제공\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"로그 유실 및 알림 누락\")), React.createElement(_components.td, null, \"로그 및 모니터링 (Logging/Monitoring)\"), React.createElement(_components.td, null, \"- 에러 발생 시 탐지율 100% 보장 - 모든 주요 이벤트에 대한 로그 수집 및 분석\"), React.createElement(_components.td, null, \"- ELK 스택 도입 (Elasticsearch, Logstash, Kibana) - 중앙 집중형 로깅 시스템 구축 - 로그 기반의 AI 예측으로 사전 대응\")))), \"\\n\", React.createElement(_components.p, null, \"마치 어떤 개발팀에서 일하는 컨설턴트 처럼 지표를 만들어 주었다. 이것도 충분히 좋지만 보다 내 능력을 온전히 표현하도록 구성하고 싶다면 개발자의 역량 기준으로 조금 구분지어 생각해보면 좋을 것 같다.\"), \"\\n\", React.createElement(_components.h3, null, \"개발자의 역량 기준으로 KPI 만들기\"), \"\\n\", React.createElement(_components.p, null, \"흔한 구분으로 개발자의 업무 영역으로 두 가지를 생각해볼 수 있다. 신규 개발(설계/구현)의 영역, 운영/유지보수의 영역이 그것이다. 특정 서비스를 담당하는 개발자라면 이 두 영역을 적절히 해결할 수 있는 역량을 갖추게 될 것이다. 그렇다면 거꾸로 생각해서 이 두 가지 영역에 대한 KPI 를 골고루 선정해 주는 것이 온전히 본인을 표현하는 것이다.(물론 이 영역의 구분은 개인의 상황에 따라 다를 수 있다.)\"), \"\\n\", React.createElement(_components.h4, null, \"설계/구현 영역의 KPI\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"문제 해결 영역\"), React.createElement(_components.th, null, \"KPI\"), React.createElement(_components.th, null, \"세부 목표 및 지표\"), React.createElement(_components.th, null, \"문제 해결 활동\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"성능 설계\")), React.createElement(_components.td, null, \"응답 성능\"), React.createElement(_components.td, null, \"- 평균 응답 시간 1초 이하 - 트래픽 급증 시 95% 이상 트랜잭션 처리\"), React.createElement(_components.td, null, \"- 쿼리 최적화 및 인덱싱 설계 - 캐시 레이어 설계 - 비동기 처리 아키텍처 구성\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"데이터 설계\")), React.createElement(_components.td, null, \"데이터 정합성\"), React.createElement(_components.td, null, \"- 데이터 정확도 99% 이상 - 상태 불일치 1% 이하\"), React.createElement(_components.td, null, \"- 트랜잭션 경계 설정 - 이벤트 소싱 패턴 적용 - 데이터 검증 로직 구현\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"보안 설계\")), React.createElement(_components.td, null, \"보안 안정성\"), React.createElement(_components.td, null, \"- 주요 보안 취약점 0건 - 인증/인가 오류 0건\"), React.createElement(_components.td, null, \"- OWASP 기반 보안 설계 - 인증/인가 체계 구현 - 데이터 암호화 적용\")))), \"\\n\", React.createElement(_components.h4, null, \"운영/유지보수 영역의 KPI\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"문제 해결 영역\"), React.createElement(_components.th, null, \"KPI\"), React.createElement(_components.th, null, \"세부 목표 및 지표\"), React.createElement(_components.th, null, \"문제 해결 활동\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"시스템 운영\")), React.createElement(_components.td, null, \"서비스 안정성\"), React.createElement(_components.td, null, \"- 서버 가동률 99.9% 이상- 평균 복구 시간 30분 이내\"), React.createElement(_components.td, null, \"- 모니터링 체계 구축- 장애 대응 프로세스 수립 - 부하 분산 체계 운영\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"로그 관리\")), React.createElement(_components.td, null, \"모니터링 완성도\"), React.createElement(_components.td, null, \"- 에러 탐지율 100%- 핵심 지표 수집률 99%\"), React.createElement(_components.td, null, \"- 중앙화된 로깅 시스템 운영- 실시간 알림 체계 구축 - 로그 분석 자동화\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"유지보수\")), React.createElement(_components.td, null, \"유지보수 효율성\"), React.createElement(_components.td, null, \"- 평균 수정 시간 단축- 재발 장애 0건\"), React.createElement(_components.td, null, \"- 문서화 체계 구축- 배포 자동화 - 테스트 자동화\")))), \"\\n\", React.createElement(_components.p, null, \"이렇게 재구성하면 개발자의 핵심 역량별로 어떤 KPI를 관리해야 하는지 더 명확해진다. 설계/구현 단계에서는 시스템의 기본 품질을 결정하는 지표들을, 운영/유지보수 단계에서는 시스템의 안정적 운영과 관련된 지표들을 관리하게 된다. 각 영역의 KPI는 서로 연관되어 있으며, 설계 단계의 품질이 운영 단계의 효율성에 직접적인 영향을 미친다는 점을 알 수 있다.\"), \"\\n\", React.createElement(_components.h2, null, \"KPI와 개인의 경력 개발 연계\"), \"\\n\", React.createElement(_components.p, null, \"그럼 이제 이걸 하기만 하면 되겠지만, 현실은 녹록치 않다. 어떤 개발팀에 모니터링 도구를 도입한다는 것, ELK 스택을 도입한다는 것은 개인이 눈 감았다가 뜨면 해결되는 문제가 아니다. 조직의 규모와 구조, 사업 영역의 규제 정도에 따라 이런 해결책들을 도입하기 위한 노력과 시간은 천차만별이다. 결국 이런 내용을 참고 삼아, 본인만의 문제 해결 활동을 해야한다.\"), \"\\n\", React.createElement(_components.p, null, \"개발자로서 우리는 종종 \\\"이상적인 개발 환경\\\"에 대한 로망을 가지고 있다. 하지만 현실의 제약 속에서 우리는 어떤 것들을 실현할 수 있을까? 중요한 것은 \\\"문제를 위한 문제\\\"를 만들지 않는 것이다. 예를 들어, 단순히 최신 기술을 도입하고 싶다는 이유로 안정적으로 운영되고 있는 시스템을 뜯어고치자고 제안하는 것은 현명하지 않다.\"), \"\\n\", React.createElement(_components.h3, null, \"KPI를 통한 업무 방향성 도출\"), \"\\n\", React.createElement(_components.p, null, \"만약 정말 중요하다고 생각하는 기술적 과제가 있다면, 이를 실현하기 위한 단계적 접근이 필요하다. 예를 들어 Grafana 를 통한 로그 수집 시스템 도입이 필요하다고 판단된다면:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"현재 발생하는 문제점을 수치화\"), \"\\n\", React.createElement(_components.li, null, \"조직의 문제와 연결되는 KPI와 개선 목표 제시\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이런 식의 단계적 접근이 불가능하다고 판단된다면, 어쩌면 다른 환경을 찾아야 할 시기라는 신호일 수 있다. 혹은 조직을 설득할 더 나은 방법을 고민해볼 기회일 수도 있다.\"), \"\\n\", React.createElement(_components.h3, null, \"비즈니스 관점의 진짜 문제 vs 기술적 과제\"), \"\\n\", React.createElement(_components.p, null, \"예를 들어 내가 백화점 SI/SM 환경에서 겪었던 일화가 있다. MyBatis로 구성된 시스템을 처음 보았을 때, 나는 JPA의 편리함을 알고 있었기에 무작정 이것을 JPA로 전환하자고 제안했었다. 당시 JPA를 살짝 맛보기로 사용해본 경험에 취해있었던 것이다. 하지만 이는 매우 순진한 생각이었다. 트랜잭션 관리 방식의 변경, 복잡한 쿼리들의 JPA 변환, 기존 코드와 동일한 동작을 보장하기 위한 검증 등 실질적으로 수반되어야 할 문제들을 전혀 고려하지 않은 제안이었다. 새로운 기술 도입은 단순히 코드를 바꾸는 것 이상의 복잡한 과정이며, 이는 현재 시스템의 안정성을 해칠 수 있는 위험이었다.\"), \"\\n\", React.createElement(_components.p, null, \"지금 생각해보면, JPA 도입을 제안하기 전에 다음과 같은 KPI를 먼저 정립했어야 했다. 예를 들자면 아래와 같다:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"현재 시스템에 대한 문제 정량화\")), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"현 백오피스 솔루션 내 반복적인 CRUD 코드가 전체 코드의 약 N%를 차지\"), \"\\n\", React.createElement(_components.li, null, \"현 백오피스 솔루션의 신규 고객사 적용 시 DB 연동 코드 작성에 평균 N%의 시간 소요\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"KPI를 통한 JPA 도입 필요성에 대해 역설\")), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"솔루션의 신규 고객사 적용의 맨먼스\"), \"를 KPI로 정하고 이를 얼마만큼 감소시킬 수 있는지 표현\"), \"\\n\", React.createElement(_components.li, null, \"이 KPI를 조직의 목표로 정하기 위해 설득\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이런 식으로 KPI로 설득했다면, \\\"신규 개발되는 독립적인 기능부터 JPA 적용\\\"과 같은 파일럿 프로젝트를 진행하는 등의 절충안이라도 진행할 수 있었을 것 같다.\"), \"\\n\", React.createElement(_components.h2, null, \"마치며\"), \"\\n\", React.createElement(_components.p, null, \"꼭 경력기술서를 잘 쓰기 위해서 KPI를 고민해야 한다기 보다는, 나의 성과를 타인에게 설득력 있게 표현하기 위한 방식으로써 KPI를 고민해보면 좋을 것 같다. 내 기준으로는 생각보다 같은 개발 조직 내에서도 합의된 업무 방향을 갖는다는 것이 쉽지가 않았다. KPI의 설정 만으로 그것이 해결되지는 않겠지만, 이런 지표를 다같이 고민하고 정해보는 시간을 가진다면 구성원이 공감하는 방향으로 성과를 낼 수 있을 것이라 본다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 올해 이런 KPI에 대해 아직 고민해보지 않았다면, 몸 담고 있는 조직의 진짜 문제와 연결되는 KPI를 만들고 이를 기준으로 일해보면 어떨까?\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/dahyeung/Repositories/dahyeong-yun.github.io/content/posts/performance-management/software-develop-kpi/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h2","p","ol","li","h3","table","thead","tr","th","strong","tbody","td","h4","ul","_provideComponents","components","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}