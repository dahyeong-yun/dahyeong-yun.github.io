{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-guletto-guletto-midway-reflection-index-mdx-2b000e545c5d97976457.js","mappings":"uOAMA,MAFmBA,IAAA,IAAC,KAAEC,GAAmBD,EAAA,OAAK,IAAI,EC4BlD,MACME,EADK,CAAC,OAAD,aACOC,KAAKC,GAAC,0BAA+BA,EAAC,IAAIA,EAAC,SAsC7D,MApCwEJ,IAAA,IAAGK,MAAM,KAAEJ,GAAM,SAAEK,GAAUN,EAAA,OACnGO,EAAAA,EAAAA,IAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,IAACE,EAAAA,GAAO,CAACC,GAAG,KAAKC,QAAQ,aACtBV,EAAKW,QAERL,EAAAA,EAAAA,IAAA,KAAGM,GAAI,CAAEC,MAAM,YAAcC,GAAI,EAAGC,EAAG,CAAEF,MAAM,aAAgBG,SAAU,CAAC,EAAG,EAAG,MAC9EV,EAAAA,EAAAA,IAAA,YAAON,EAAKiB,MACXjB,EAAKkB,OACJZ,EAAAA,EAAAA,IAACa,EAAAA,SAAc,YAEbb,EAAAA,EAAAA,IAACc,EAAAA,EAAQ,CAACF,KAAMlB,EAAKkB,QAGxBlB,EAAKqB,YAAU,MACfrB,EAAKqB,aAAcf,EAAAA,EAAAA,IAAA,YAAON,EAAKqB,WAAW,eAE7Cf,EAAAA,EAAAA,IAAA,WACEM,GAAI,CACFU,GAAI,EACJ,6BAA8B,CAC5BA,GAAI,CAAC,EAAG,EAAG,GACXC,aAAa,MACbC,UAAWvB,EAAOwB,KAAK,MACvB,2BAA4B,CAC1BF,aAAa,QAGjBb,QAAQ,mBAGTL,IAEHC,EAAAA,EAAAA,IAACoB,EAAU,CAAC1B,KAAMA,IACX,EAKJ,MAAM2B,EAA4BC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,IAAG3B,MAAM,KAAEJ,IAAQ4B,EAAA,OAC1DtB,EAAAA,EAAAA,IAAC0B,EAAAA,EAAG,CACFrB,MAAOX,EAAKW,MACZsB,YAAajC,EAAKiC,YAAcjC,EAAKiC,YAAcjC,EAAKkC,QACxDC,MAAOnC,EAAKoC,OAAoB,QAAdP,EAAG7B,EAAKoC,cAAM,IAAAP,GAAiB,QAAjBC,EAAXD,EAAaQ,uBAAe,IAAAP,GAAQ,QAARC,EAA5BD,EAA8BQ,cAAM,IAAAP,OAAzB,EAAXA,EAAsCQ,SAAMC,EACjEC,SAAUzC,EAAK0C,KACfC,aAAc3C,EAAK2C,cACnB,EC5EW,SAASC,EAAmB7C,GAAwC,OAAlC8C,GAA+B9C,EAC9E,OAAOoB,EAAAA,cAAC2B,EAASD,EACnB,C,6ECyBA,IAjBiB9C,IAA0B,IAAzB,KAAEmB,GAAiBnB,EACnC,MAAM,SAAEgD,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,KAE/B,OACE3C,EAAAA,EAAAA,IAACa,EAAAA,SAAc,KACZD,EAAKhB,KAAI,CAACgD,EAAKC,KACd7C,EAAAA,EAAAA,IAACa,EAAAA,SAAc,CAACiC,IAAKF,EAAIR,QACpBS,GAAC,MACJ7C,EAAAA,EAAAA,IAAC+C,EAAAA,KAAI,CAACzC,GAAK0C,IAAC,IAAAC,EAAA,MAAM,IAAa,QAAXA,EAAGD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUxC,EAAG,EAAG0C,IAAIC,EAAAA,EAAAA,GAAe,IAAIV,EAAQ,IAAID,EAAQ,IAAIG,EAAIR,OACvFQ,EAAIS,SAII,C,yDCyCrB,IAvDY5D,IAOK,IAPJ,MACXY,EAAK,GAAK,YACVsB,EAAW,GAAK,SAChBQ,EAAQ,GAAK,MACbN,EAAK,GAAK,SACV9B,EAAW,KAAI,aACfsC,EAAY,IACH5C,EACT,MAAM6D,GAAOC,EAAAA,EAAAA,MAEP,UACJC,EACAC,aAAcC,EAAY,QAC1BC,EACAC,gBAAiBC,EACjBC,UAAWC,EAAY,OACvBC,EAAM,aACNC,GACEX,EAEEY,EAAM,CACV7D,MAAOA,EAAWA,EAAK,MAAMmD,EAAcE,EAC3C/B,YAAaA,GAAekC,EAC5BM,IAAI,GAAIR,GAAUxB,GAAQ,IAC1BN,MAAM,GAAI8B,GAAU9B,GAASkC,IAE/B,OACElD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMuD,KAAMH,IACZpD,EAAAA,cAAA,aAAQqD,EAAI7D,OACZQ,EAAAA,cAAA,QAAMwC,KAAK,cAAcgB,QAASH,EAAIvC,cACtCd,EAAAA,cAAA,QAAMwC,KAAK,QAAQgB,QAASH,EAAIrC,QAChChB,EAAAA,cAAA,QAAMyD,SAAS,WAAWD,QAASH,EAAI7D,QACvCQ,EAAAA,cAAA,QAAMyD,SAAS,SAASD,QAASH,EAAIC,MACrCtD,EAAAA,cAAA,QAAMyD,SAAS,iBAAiBD,QAASH,EAAIvC,cAC7Cd,EAAAA,cAAA,QAAMyD,SAAS,WAAWD,QAASH,EAAIrC,QACvChB,EAAAA,cAAA,QAAMyD,SAAS,UAAUD,QAAQ,YACjCxD,EAAAA,cAAA,QAAMyD,SAAS,eAAeD,QAASH,EAAIvC,cAC3Cd,EAAAA,cAAA,QAAMwC,KAAK,eAAegB,QAAQ,wBAClCxD,EAAAA,cAAA,QAAMwC,KAAK,gBAAgBgB,QAASH,EAAI7D,QACxCQ,EAAAA,cAAA,QAAMwC,KAAK,cAAcgB,QAASH,EAAIC,MACtCtD,EAAAA,cAAA,QAAMwC,KAAK,sBAAsBgB,QAASH,EAAIvC,cAC9Cd,EAAAA,cAAA,QAAMwC,KAAK,gBAAgBgB,QAASH,EAAIrC,QACxChB,EAAAA,cAAA,QAAMwC,KAAK,oBAAoBgB,QAASH,EAAIvC,cAC5Cd,EAAAA,cAAA,QAAMwC,KAAK,kBAAkBgB,QAASL,IACtCnD,EAAAA,cAAA,QAAMwC,KAAK,eAAegB,QAAQ,wCAClCxD,EAAAA,cAAA,QAAM0D,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQC,MAAMC,EAAAA,EAAAA,YAAW,wBACjE9D,EAAAA,cAAA,QAAM0D,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQC,MAAMC,EAAAA,EAAAA,YAAW,wBACjE9D,EAAAA,cAAA,QAAM0D,IAAI,mBAAmBE,MAAM,UAAUC,MAAMC,EAAAA,EAAAA,YAAW,2BAC7DtC,EAAexB,EAAAA,cAAA,QAAM0D,IAAI,YAAYG,KAAMrC,IAAmB,KAC9DtC,EACA,C,wHC7DP,SAAS6E,EAAkBrC,GACzB,MAAMsC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsB5C,EAAM6C,YAC/B,OAAOvE,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBgE,EAAYG,GAAI,KAAM,iCAAkC,KAAMnE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,0JAA2J,KAAMpE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,mQAAoQ,KAAMpE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,uEAAwE,KAAMpE,EAAAA,cAAoBgE,EAAYG,GAAI,KAAM,2BAA4B,KAAMnE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,+FAAgG,KAAMpE,EAAAA,cAAoBgE,EAAYK,GAAI,KAAM,yBAA0B,KAAMrE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,qHAAsH,KAAMpE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,4TAA6T,KAAMpE,EAAAA,cAAoBgE,EAAYK,GAAI,KAAM,wBAAyB,KAAMrE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,8JAA+J,KAAMpE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,mCAAoC,KAAMpE,EAAAA,cAAoBgE,EAAYG,GAAI,KAAM,yBAA0B,KAAMnE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,0GAA2G,KAAMpE,EAAAA,cAAoBgE,EAAYK,GAAI,KAAM,yBAA0B,KAAMrE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,8JAA+J,KAAMpE,EAAAA,cAAoBgE,EAAYK,GAAI,KAAM,gBAAiB,KAAMrE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,4RAA6R,KAAMpE,EAAAA,cAAoBgE,EAAYG,GAAI,KAAM,2BAA4B,KAAMnE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,+JAAgK,KAAMpE,EAAAA,cAAoBgE,EAAYK,GAAI,KAAM,WAAY,KAAMrE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,mJAAoJ,KAAMpE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,oQAAqQ,KAAMpE,EAAAA,cAAoBgE,EAAYK,GAAI,KAAM,oBAAqB,KAAMrE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,2DAA4D,KAAMpE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,sMAAuM,KAAMpE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,2SAA4S,KAAMpE,EAAAA,cAAoBgE,EAAYK,GAAI,KAAM,iBAAkB,KAAMrE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,wHAAyH,KAAMpE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,6CAA8C,KAAMpE,EAAAA,cAAoBgE,EAAYG,GAAI,KAAM,OAAQ,KAAMnE,EAAAA,cAAoBgE,EAAYI,EAAG,KAAM,6KACzxJ,CAKA,MAJA,SAAoB1C,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAO8C,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsB5C,EAAM6C,YAC3E,OAAOE,EAAYzE,EAAAA,cAAoByE,EAAW/C,EAAO1B,EAAAA,cAAoB+D,EAAmBrC,IAAUqC,EAAkBrC,EAC9H,E,UCVe,SAASgD,EAAiBhD,GACvC,OAAO1B,EAAAA,cAAoB2E,EAAAA,EAAejD,EAAO1B,EAAAA,cAAoB4E,EAAqBlD,GAC5F,CAHAiD,EAAAA,C","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/guletto/guletto-midway-reflection/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"글또가 이대로 진행되면 끝날 때 만족할 것 같으세요?\"), \"\\n\", React.createElement(_components.p, null, \"이 질문에 '아니요' 라는 답변을 하고 있는가? 나도 '아니요'라는 대답이 저절로 나오는 상황이다. 앞으로의 활동 방향을 적절히 수정해보고자 하는 이 질문들을 각자 스스로 해본다면 글또 10기 갈무리에 조금이라도 도움이 되지 않을까 하여 부끄러운 사고 실험을 적어본다.\"), \"\\n\", React.createElement(_components.p, null, \"연초에 AC2라는 교육을 등록하고 교육을 시작한지가 꽤 되었다. 함께자라기의 저자 김창준 님이 만든 교육인데, 러프하게 말하자면 다양한 문제에 대한 해결 방법을 배우고 있다. 여기서 배운 질문이 있다. 회의 중간에 혹은 회고 중간에 '이대로 회의(혹은 회고)가 계속 진행한다면 만족하실 것 같으세요?'라는 질문을 한다. 이렇게 하면 달리기 시작했으니까 죽 달리기만 하는 문제를 방지하고, 본래 우리가 성취하려고 했던 목표로 돌아가는 계기를 마련할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"지금 자신의 글또 활동이 매우 불만족한 사람이라면 다음 질문을 따라가며 스스로 답해보고 나의 글과 비교도 해보길 바란다.\"), \"\\n\", React.createElement(_components.h2, null, \"왜 그런가요? 혹은 언제 그렇게 느끼나요?\"), \"\\n\", React.createElement(_components.p, null, \"'아니요'라고 대답했다면 왜 그런가. 나는 크게는 나의 글에 대한 만족감이 없다는 점, 글또에서 사람들을 더 만나지 못했다는 점이 불만족을 만드는 원인인 것 같다.\"), \"\\n\", React.createElement(_components.h3, null, \"첫 번째, 글을 형식적으로 쓰고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"나는 막연히 글또가 계속 될 것을 기대하며, 한주도 빠짐 없이 글을 쓰기라도 해보자고 생각하고 적어왔다. 이러다 보니 글에 대한 퀄리티가 만족스럽지가 못했고, 써야하니까 쓰는 상황이 반복이 된 것 같다.\"), \"\\n\", React.createElement(_components.p, null, \"기술적인 나의 통찰이나 경험이 담기는 글을 써보고 싶다는 욕심도 만족감을 저해하고 있다. 스스로 만족하는 정도로 작성하려면 실제의 사례여야 하고, 그렇기 위해서는 글이 생산되는 속도가 회사에서 일의 속도와도 어느 정도 맞아야 한다. 문제에 대한 정의와 설계에 대한 고민 그리고 구현, 성과를 측정해야만이 모종의 깊이와 통찰이 생긴다고 보기 떄문이다. 이렇게 하지 못한 것은 각각의 요소를 관찰하고 표현하는 방법이 없어 글을 쓰는 시점에 부재함을 깨달았고, 이미 측정이 되어 있어야 할 수치들도 측정이 되어 있지 않아 추측으로 쓸 수 밖에 없는 것들도 있었다.\"), \"\\n\", React.createElement(_components.h3, null, \"두 번째, 사람들을 많이 못 만났다.\"), \"\\n\", React.createElement(_components.p, null, \"스스로 느끼기에 사람들을 만나는데 투자할 수 있는 시간이 없다고 느꼈다. 떄문에 더 유익하고 진지한 시간들을 보내기 위한 활동을 싶은데 그러려면 내가 투자를 더 해야한다고 생각했다. 나는 그것까진 아직 투자하지 못할 것 같은데 하는 생각에 자꾸 미루다 보니 지금까지 와버렸다.\"), \"\\n\", React.createElement(_components.p, null, \"또 모르는 사람에게 연락하기가 막연히 꺼려진 것도 있다.\"), \"\\n\", React.createElement(_components.h2, null, \"그럼 어떻게 하면 만족할 수 있을까요?\"), \"\\n\", React.createElement(_components.p, null, \"만족감을 1-5 라고 하면 지금 3 정도 점수인 것 같다. 대부분의 만족감은 고대하던 글또에 참여해보고 있다는 정도다. 나머지 2점을 채워서 5점이 되려면 뭐가 필요할까를 생각해봤다.\"), \"\\n\", React.createElement(_components.h3, null, \"글을 염두하고 설계해서 깊이 있게 쓰기\"), \"\\n\", React.createElement(_components.p, null, \"글을 좀 더 생각하며 쓰고 싶다. 내가 생각해도 경험과 통찰이 묻어 나오는 글을 쓰고 싶다. 내가 쓰고 싶은 스케일로 글을 쓰려면 회사의 속도를 생각해야 한다. 그게 아니면 스스로 뭔가를 개발해서 만들어 내는 방법도 있다. 글로 통찰을 정리할 것을 염두하며 개발을 하고 싶다.\"), \"\\n\", React.createElement(_components.h3, null, \"다양한 사람들을 만나기\"), \"\\n\", React.createElement(_components.p, null, \"내가 막연히 가고 싶다고 생각하는 회사들이 있다. 거기 다니시는 분들도 있고, 왜 나는 도와달라고 한번도 이야기를 못했나 싶다. 그냥 왠지 민폐라고 느낄 것 같았다. 여기서 그 분들한테 DM을 보냈을 때의 상방(최상의 결과)과 하방(최악의 결과)을 생각해보자. 하방은 내가 원래 모르던 사람이 앞으로도 모르는 사람으로 지내게 되는 것이고, 상방은 내가 원하는 정보나 친분까지도 얻을 수 있게 된다. 하방이 매우 낮은 활동이다. 더 현명하게 접근하는 것을 고민하는 것은 좋겠지만 그냥 해도 될 것 같다.\"), \"\\n\", React.createElement(_components.h2, null, \"이렇게 쓰면 당장 할 수 있을것 같으세요?\"), \"\\n\", React.createElement(_components.p, null, \"뭘 해야할지 약간 애매하다고 느낄 것 같다. 더 구체적이고, 더 실천 가능하도록 생각해보자. 어떻게 하면 실천이 가능할까? 바로 내일이라도 피드백 할 수 있으면 좋겠다. 내가 실행 했고 안했고가 분명하고, 그 실행을 했다면 그것이 잘했고 못했고 또한 분명해야 피드백에 유리하다.\"), \"\\n\", React.createElement(_components.h3, null, \"DM 보내보기\"), \"\\n\", React.createElement(_components.p, null, \"일단 백엔드 반상회에서 만났던 분들 몇분 부터 시작해보자. 그리고 글이 좋아서 구독했던 분들도 한번 시도해보자. DM 보내보자. 리스트를 만들어 두고 2명 씩만 보내보자. 답변이 오지 않으면 다음 2명을 보내 보고 그렇게 2주간 총 6명만 먼저 도전해보자.\"), \"\\n\", React.createElement(_components.p, null, \"업그레이또도 어쩌다 초대가 되었는데, 반드시 참여를 해보자. 그리고 사람들의 목표를 align 할 수 있게 최대한 도와보자. 여기서는 AC2에서 배운 걸 적용해 볼 수 있는 좋은 기회일 수도 있다. 내가 꼭 앞으로의 참여를 하지 않더라도 사람들이 모인 시간을 조금이라도 더 의미있게 보내게 되었다고 느낀다면 성공이다. 그렇다면 그 자리에서 이걸 물어볼 수 있는 최소 3명 정도의 사람들을 생각해보고, 이 분들에게 만남 이후 3일 내에 DM 을 보내도록 하자.\"), \"\\n\", React.createElement(_components.h3, null, \"깊이 있게 써볼 수 있을 글들\"), \"\\n\", React.createElement(_components.p, null, \"현재 회사에서 처한 문제 중에 글로 적어봄직한 것들은 XSS 필터 적용과 로그인 방식 변화가 있다.\"), \"\\n\", React.createElement(_components.p, null, \"XSS 필터의 경우 서버가 필터를 처리하기 위한 다양한 옵션에 대해서 서술하고, 내가 마주한 상황에 왜 해당 방식으로 구현하는 것이 적절하다고 판단했는지를 알리고 싶다. 또한 내가 적용할 방식의 적용 자체의 간단한 코드에서 한발 더 나아가서 그것을 사용했을 때 커스텀 할 수 있는 항목이나, 설정 가능한 범위, 잠재적인 위험 등을 정리해보고 싶다.\"), \"\\n\", React.createElement(_components.p, null, \"필터 보다 로그인 방식 변경은 매우 호흡이 긴 문제이다. 여기에 얽혀 있는 것은 비단 기술적 차원 문제 뿐 아니라 타 팀간의 업무 범위의 문제도 연결되어 있다. 하이브리드 앱에서 스프링 부트로 된 서버가 로그인을 처리하면서 마주하는 다양한 문제, 그리고 이걸 더 복잡하게 만드는 배포 구조와 인프라 제약 등을 어떻게 대응했는지 적어보려고 한다. 그리고 기능적으로 로그인 방식이 변경 된 것 이외에 이 방식의 변화가 성능이나 사용성의 문제를 수반했는지 그렇지 않은지 측정한 결과까지 포함한다면 내 스스로 만족한 글이 될 것 같다.\"), \"\\n\", React.createElement(_components.h3, null, \"마지막에 결과 보고 하기\"), \"\\n\", React.createElement(_components.p, null, \"이 후에 어떻게 되었는지는 글또 10기를 마치는 글에서 마지막으로 정리해보겠다. 몇 명에게 어떤 내용으로 DM을 보내보았고, 어떻게 답변이 왔고 만났다면 만나서 어떻게 했고 만족감이 어땠는지 등을 기록해보자.\"), \"\\n\", React.createElement(_components.p, null, \"블로그 글은 글또에 제출을 하게 될 것이므로 그 자체가 증빙이 될 것이다.\"), \"\\n\", React.createElement(_components.h2, null, \"마치며\"), \"\\n\", React.createElement(_components.p, null, \"내가 지금 현재 글또 에서 가장 크게 느끼는 문제를 해결하는 방향으로 내 활동을 수정하기 위한 자문자답을 해보았다. 질문은 최대한 풀어서, 용어를 쓰지 않고 쉽게 써보려고 했다. 누군가 이 질문들을 따라만 가도 나와 같이 글또 활동에 아쉬움을 느낀다면, 그 아쉬움을 조금은 줄여볼 수 있지 않을까 한다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/dahyeung/Repositories/dahyeong-yun.github.io/content/posts/guletto/guletto-midway-reflection/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h2","p","h3","_provideComponents","components","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}