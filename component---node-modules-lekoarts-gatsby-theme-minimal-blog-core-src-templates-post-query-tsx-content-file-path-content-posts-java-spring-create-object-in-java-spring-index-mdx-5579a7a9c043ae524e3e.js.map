{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-java-spring-create-object-in-java-spring-index-mdx-5579a7a9c043ae524e3e.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/java-spring/create-object-in-java-spring/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"객체 생성 방식에 대한 고민\"), \"\\n\", React.createElement(_components.p, null, \"팀 내 객체 생성 방식이 제각각인 상황을 목격하게 되었다. 프로젝트의 복잡성이 날로 증가하면서 어떠한 변경이 추가될 떄, 일관되지 않은 객체 생성 방식 때문에 수정이 번거로워 진다. 이를 어떻게 하면 일관된 방식으로 통일할 수 있을지에 대한 고민에서 이 글을 작성하게 되었다.\"), \"\\n\", React.createElement(_components.p, null, \"단순하지만 근본적인 질문에서 시작해보자. Java로 개발할 때 객체를 어떻게 생성해야 할까? 여기서 말하는 객체가 모호하게 들린다면, 클래스의 인스턴스를 어떻게 생성할 것인가로 바꿔 생각해도 좋다.\"), \"\\n\", React.createElement(_components.p, null, \"논의의 범위를 좀 더 구체적으로 좁혀보자면, 스프링 부트 기반의 웹 애플리케이션을 개발할 때의 객체 생성 방식에 대해 이야기해보고자 한다.\"), \"\\n\", React.createElement(_components.h2, null, \"객체를 생성하게 되는 시점들\"), \"\\n\", React.createElement(_components.h3, null, \"스프링으로 개발하면서 객체를 생성하게 되는 시점 두 가지\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"개발자가 명시적으로 의식하면서 처리하는 경우로, 주로 레이어 간 개념적인 클래스를 생성할 때이다.\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    withLineNumbers: true,\n    title: true\n  }, \"// 서비스 레이어에서 엔티티를 DTO로 변환하는 경우\\nOrderDto orderDto = new OrderDto(order.getId(), order.getCustomerName());\\n\\n// 레포지토리에서 조회한 결과를 도메인 객체로 변환하는 경우\\nOrder order = Order.createFrom(orderEntity);\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"잘 의식하지 않고 자동화 되는 부분도 있다. 보통 프레임워크나 라이브러리에 의해 자동화되어 처리되는 경우다. 주로 외부에서 애플리케이션으로 데이터가 유입될 때 발생한다.\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    withLineNumbers: true,\n    title: \"자동으로 객체 생성이 되는 경우\"\n  }, \"// HTTP 요청 바디를 객체로 변환하는 경우\\n@PostMapping(\\\"/orders\\\")\\npublic ResponseEntity<OrderResponse> createOrder(@RequestBody OrderRequest request) {\\n// Jackson이 자동으로 OrderRequest 객체 생성\\n}\\n\\n// MyBatis resultType 매핑\\n@Select(\\\"SELECT id, name, price FROM products\\\")\\nList<Product> findAll();  // MyBatis가 자동으로 Product 객체 생성\\n\\n// JPA 엔티티 조회\\n@Entity\\npublic class User {\\n@Id\\nprivate Long id;\\nprivate String name;\\n\\n// JPA는 기본 생성자 필요\\nprotected User() {}\\n}\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"이때 리플렉션의 도움을 받을 때도 있고, 생성자를 사용할 수도, 팩토리 메서드를 사용할 수도 있다.\"), \"\\n\", React.createElement(_components.li, null, \"이러나 저러나 자바 문법 아래서 근본적으로는 생성자가 객체를 생성하는 역할을 수행한다. 따라서 생성자에 따른 생성 방식을 잘 확인해야 한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"문제는 의식하지 않는 곳에서 발생\"), \"\\n\", React.createElement(_components.h3, null, \"생성자를 건드리기 시작하면서 문제가 발생한다\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"예를 들어 클래스 레벨로 \", React.createElement(_components.code, null, \"@Builder\"), \"를 선언하면 무슨 문제가 생길까. 기본 설정에서 대분 JSON 역직렬화를 위해 \", React.createElement(_components.code, null, \"jackson\"), \"이 사용된다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"이 경우 객체 생성은 리플렉션을 위해 기본 생성자를 필요로 한다.\"), \"\\n\", React.createElement(_components.li, null, \"빌더를 클래스 레벨로 생성하는 순간 생성자가 생기므로 기본 생성자가 사라진다.\"), \"\\n\", React.createElement(_components.li, null, \"이러면 요청을 파싱하지 못하는 오류가 발생한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"mybatis\"), \"도 유사한 제약이 있다. \", React.createElement(_components.code, null, \"resultType\"), \"으로 선언된 클래스가 생성자가 없다면 쿼리의 결과 행과 멤버 변수를 꼭 일치 시켜야만 한다. 변수를 일치시키지 않게 하기 위해서는 리플렉션을 사용할 수 있도록 기본 생성자를 재공해야 한다.\"), \"\\n\", React.createElement(_components.li, null, \"JPA 또한 \", React.createElement(_components.code, null, \"@Entity\"), \"로 선언된 객체는 매핑을 위해 반드시 기본 생성자가 필요하다.\"), \"\\n\", React.createElement(_components.li, null, \"내가 자주 사용하는 의존성을 기준으로 생성자의 필요 여부를 간단히 정리해 보았다.\"), \"\\n\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"Name\"), React.createElement(_components.th, null, \"Constructor\"), React.createElement(_components.th, null, \"Detail\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"MyBatis\"), React.createElement(_components.td, null, \"기본 생성자 (no-args)\"), React.createElement(_components.td, null, React.createElement(_components.code, null, \"ResultType\"), \" 및 \", React.createElement(_components.code, null, \"ParameterType\"), \"으로 객체 전달 시 필요\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"JPA\"), React.createElement(_components.td, null, \"기본 생성자 (no-args), 필요한 필드를 포함한 생성자 (선택)\"), React.createElement(_components.td, null, React.createElement(_components.code, null, \"@Entity\"), \" 클래스는 반드시 기본 생성자 필요 (\", React.createElement(_components.code, null, \"protected\"), \" 이상의 접근 제어자), 다른 생성자가 있더라도 기본 생성자 필수, 영속성 컨텍스트가 프록시 객체 생성 시 필요\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Jackson\"), React.createElement(_components.td, null, \"기본 생성자 (no-args) 또는 @JsonCreator로 지정된 생성자\"), React.createElement(_components.td, null, \"JSON deserialize 시 기본 생성자 필요, 또는 \", React.createElement(_components.code, null, \"@JsonCreator\"), \" + \", React.createElement(_components.code, null, \"@JsonProperty\"), \"로 지정된 생성자 사용 가능\")))), \"\\n\", React.createElement(_components.h3, null, \"그럼 기본 생성자를 다 생성하면 되지 않나.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"그렇다고 기본 생성자를 \", React.createElement(_components.code, null, \"public\"), \"으로 죄다 열어 주게 되면 계속해서 객체를 생성하는 방식이 왜곡되기 시작한다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"모든 필드가 \", React.createElement(_components.code, null, \"null\"), \"인 객체에 값을 주입하기 위해 \", React.createElement(_components.code, null, \"setter\"), \"로 값을 지정하는 로직을 많이 보았을 것이다.\"), \"\\n\", React.createElement(_components.li, null, \"이때 \", React.createElement(_components.code, null, \"setter\"), \"는 아무 의미가 없고, 단지 개발자의 편의를 위해 생성되었을 뿐이다. 필드 갯수만큼 나열되는 \", React.createElement(_components.code, null, \"setter\"), \" 메서드에서는 에서는 뭐가 맞고 틀린 것인지, 값을 setter에 넘기는 것이 어떤 의미를 가지는 것인지 알기도 어렵다.\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    title: \"안티 패턴: setter를 통한 객체 생성\"\n  }, \"Order order = new Order();  // 모든 필드 null\\norder.setId(1L);\\norder.setCustomerName(\\\"John\\\");\\norder.setStatus(OrderStatus.PENDING);\\norder.setItems(items);\\n// 어떤 필드가 필수이고 어떤 필드가 선택적인지 알 수 없음\\n\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"협업을 위한 규칙을 마련해 보자면\"), \"\\n\", React.createElement(_components.h3, null, \"깊게 생각하기 어렵다면 / 빌더 쓴다면 private으로 써라\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"이펙티브 자바에서는 가장 먼저 객체 생성에 관련한 item들이 등장한다. 여기서 제안하는 두 가지 규칙을 맹목적으로 따르다 보면 대다수의 상황에서는 해결이 된다고 본다. 물론 하다보면 분명히 예외가 필요한 지점은 생기겠지만, 일단 펼쳐놓은 것을 막는 것보다 막아둔 것을 펼치는 것이 더 쉽다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    title: \"권장 객체 생성 패턴\"\n  }, \"public class Product {\\n    private final String name;\\n    private final BigDecimal price;\\n    private final ProductCategory category;\\n\\n    @Builder(access = AccessLevel.PRIVATE)\\n    private Product(String name, BigDecimal price, ProductCategory category) {\\n        this.name = Objects.requireNonNull(name, \\\"상품명은 필수입니다\\\");\\n        this.price = Objects.requireNonNull(price, \\\"가격은 필수입니다\\\");\\n        this.category = Objects.requireNonNull(category, \\\"카테고리는 필수입니다\\\");\\n    }\\n\\n    // 의미있는 이름의 팩토리 메서드\\n    public static Product createNewProduct(String name, BigDecimal price, ProductCategory category) {\\n        return Product.builder()\\n                .name(name)\\n                .price(price)\\n                .category(category)\\n                .build();\\n    }\\n\\n    // 특수한 상황을 위한 팩토리 메서드\\n    public static Product createGiftProduct(String name, ProductCategory category) {\\n        return Product.builder()\\n                .name(name)\\n                .price(BigDecimal.ZERO)\\n                .category(category)\\n                .build();\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"빌드를 막는 규칙이 필요\"), \"\\n\", React.createElement(_components.p, null, \"여러 개발자가 협업하여 지속 가능한 소프트웨어를 만들기 위해서는 명확한 컨벤션이 필요하다. 그리고 이 컨벤션은 빌드 실패라는 강제성을 가질 때만 실효성 있게 지켜질 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"따라서 빌드 전 단계에서 수행되는 각종 검사 도구들을 통해 검증 가능한 규칙들을 마련해야 한다.\"), \"\\n\", React.createElement(_components.p, null, \"클래스 생성은 누구나 쉽게 할 수 있고, 그에 따른 객체 생성 방식도 매우 다양하게 구현될 수 있다. 경험상 이러한 다양성에 일관된 제약을 두는 것은 결코 쉬운 일이 아니다.\"), \"\\n\", React.createElement(_components.p, null, \"현재의 규칙이 완벽하든 그렇지 않든, 통일된 규칙의 존재는 향후 코드 수정을 용이하게 만들어 줄 것이다 (맨먼스 미신에서 언급된 '개념적 일관성'과 일맥상통한다). 끊임없는 변경과 싸우는 우리 개발자들이 객체 생성 방식을 깊이 고민하고 제약해야 하는 이유가 바로 여기에 있다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/dahyeung/Repositories/dahyeong-yun.github.io/content/posts/java-spring/create-object-in-java-spring/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h2","p","h3","ul","li","pre","code","table","thead","tr","th","tbody","td","_provideComponents","components","className","withLineNumbers","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}